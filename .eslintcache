[{"C:\\Users\\song\\Documents\\code\\src\\index.js":"1","C:\\Users\\song\\Documents\\code\\src\\reportWebVitals.js":"2","C:\\Users\\song\\Documents\\code\\src\\App.js":"3","C:\\Users\\song\\Documents\\code\\src\\firebase.js":"4","C:\\Users\\song\\Documents\\code\\src\\Chart.js":"5","C:\\Users\\song\\Documents\\code\\src\\Map.js":"6"},{"size":500,"mtime":1609330190000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609330190000,"results":"9","hashOfConfig":"8"},{"size":1741,"mtime":1609408711756,"results":"10","hashOfConfig":"8"},{"size":491,"mtime":1609330190000,"results":"11","hashOfConfig":"8"},{"size":1076,"mtime":1609330190000,"results":"12","hashOfConfig":"8"},{"size":4421,"mtime":1610110011947,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bloj3w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\song\\Documents\\code\\src\\index.js",[],["29","30"],"C:\\Users\\song\\Documents\\code\\src\\reportWebVitals.js",[],"C:\\Users\\song\\Documents\\code\\src\\App.js",["31","32","33"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Map from './Map';\nimport Chart from './Chart';\nimport db from './firebase';\nimport { addDays } from 'date-fns';\nimport { Avatar } from '@material-ui/core';\n\n\nfunction App() {\n  const [slicks, setSlicks] = useState([])\n  const [slick, setSlick] = useState([])\n  const [timestamps, setTimestamps] = useState([])\n  const [timestamp, setTimestamp] = useState(0)\n  const [twentyfour, setTwentyfour] = useState([])\n  const [weekdays, setWeekdays] = useState([])\n  const now = new Date()\n\n  useEffect(() => {\n    db.ref('slick').once('value').then((snapshot) => {\n      setSlicks(snapshot.val())\n\n      snapshot.val().forEach(item => {\n        for (let i = 0; i < item.length; i++) {\n          timestamps.push(item[i][0])\n        }\n      })\n      setTimestamps(Array.from(new Set(timestamps)))\n      for (let i = 0; i < 24; i++) {\n        twentyfour.push(i)\n      }\n      setTwentyfour(Array.from(new Set(twentyfour)))\n\n      for (let i = 0; i < 9; i++) {\n        weekdays.push(addDays(now, i))\n        setWeekdays(Array.from(new Set(weekdays)))\n      }\n    });\n  }, [])\n\n  useEffect(() => {\n    let slickarr = []\n    timestamp && slicks?.forEach(item => {\n      item.forEach(deep => {\n        if (deep[0] === timestamp) {\n          slickarr.push([deep[1], deep[2]])\n        }\n      })\n    })\n    setSlick(slickarr)\n\n  }, [timestamp])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__avatar\">\n        <Avatar alt=\"hyrdones\" src=\"https://i.ibb.co/dbw8Wdh/favicon.jpg\" />\n      </div>\n\n      <Map timestamp={timestamp} slick={slick} twentyfour={twentyfour} weekdays={weekdays} />\n      <Chart weekdays={weekdays} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\song\\Documents\\code\\src\\firebase.js",[],"C:\\Users\\song\\Documents\\code\\src\\Chart.js",[],"C:\\Users\\song\\Documents\\code\\src\\Map.js",["34"],"import './Map.css';\nimport { MapContainer, Marker, Circle, Popup, TileLayer, LayersControl } from \"react-leaflet\";\nimport React, { useState, useEffect, useCallback } from 'react';\n\nfunction Map({ timestamp, slick, twentyfour, weekdays }) {\n  const position = [33.16141, -8.629944]\n  const [map, setMap] = useState(null)\n  const [center, setCenter] = useState({ lat: 33.16141, lng: - 8.629944 })\n  const [timenow, setTimenow] = useState(new Date())\n  const [level, setLevel] = useState(\"\");\n  const levels = ['Clean Water',\n    'Plastic',\n    'Light pollution',\n    'Medium - pollution',\n    'Medium + pollution',\n    'Heavy pollution'];\n\n  const data = [\n    [1608645600, 33.161730, -8.687834, 0, 1.05, 0.32, 1], [1608645600, 33.163268, -8.688963, 0, 1.02, 0.25, 1],\n    [1608645600, 33.159850, -8.686003, 0, 0.95, 0.32, 1], [1608645600, 33.157714, -8.684880, 0, 0.91, 0.32, 1]\n  ]\n\n  const onMove = useCallback(() => {\n    setCenter(map?.getCenter())\n  }, [map])\n\n  useEffect(() => {\n    map?.on('move', onMove)\n    return () => {\n      map?.off('move', onMove)\n    }\n  }, [map, onMove])\n\n  useEffect(() => {\n    setInterval(function () { setTimenow(new Date()); }, 1000);\n  }, [])\n\n\n  return (\n    <div className=\"map\">\n      <div className=\"map__nav\">\n        {center &&\n          <>\n            <p>\n              {center.lat.toFixed(4)}, {center.lng.toFixed(4)}\n            </p>\n            <p>\n              {timenow.toLocaleString()}\n            </p>\n          </>\n        }\n      </div>\n      <div className=\"map__level\">\n        {levels?.map(item => <p onClick={(e) => { setLevel(item) }}>{item}</p>)}\n      </div>\n      <div className=\"map__container\">\n        <MapContainer center={position} zoom={12} scrollWheelZoom={true} whenCreated={setMap}>\n          <LayersControl position=\"topright\">\n            <LayersControl.BaseLayer checked name=\"Light mode\">\n              <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"Dark mode\">\n              <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n              />\n            </LayersControl.BaseLayer>\n          </LayersControl>\n          <Marker position={position}>\n            <Popup>\n              The port of Jorg Lasfar\n          </Popup>\n          </Marker>\n          {data?.map(item => <Circle center={[item[1], item[2]]} pathOptions={{ color: 'red' }} radius={50} />)}\n        </MapContainer>\n      </div>\n\n      <div className=\"map__control\">\n        <div class=\"horizoncontrol\" id=\"horizoncontrol\">\n          <div class=\"horizoncontrol__previous\" data-name=\"previous\">\n            <span>-1h</span>\n            <svg width=\"36\" height=\"47\" viewBox=\"0 0 36 47\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M7.345 1.882C7.707.842 8.9 0 9.991 0H34.01C35.109 0 36 .897 36 2.004v42.992C36 46.103 35.1 47 34.009 47H9.99c-1.1 0-2.276-.854-2.625-1.903L0 23 7.345 1.882z\"\n                fill=\"#fff\" opacity=\"0.7\" fill-rule=\"evenodd\"></path>\n            </svg>\n          </div>\n          <div class=\"horizoncontrol__datetimecontainer\">\n            <ul class=\"horizoncontrol__timegroup \">\n              {twentyfour?.map(item =>\n                <li class=\"horizoncontrol__time\" data-horizon=\"36\"><span>{item}</span></li>\n              )}\n            </ul>\n            <ul class=\"horizoncontrol__dategroup\">\n              {weekdays?.map(day => <li class=\"horizoncontrol__date\" data-horizon=\"6\"><span>{day.toLocaleDateString().replace(/\\/[0-9]+$/, '')}</span></li>)}\n            </ul>\n          </div>\n          <div class=\"horizoncontrol__next\" data-name=\"next\">\n            <span>+1h</span>\n            <svg width=\"36\" height=\"47\" viewBox=\"0 0 36 47\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M28.655 1.882C28.293.842 27.1 0 26.009 0H1.99C.891 0 0 .897 0 2.004v42.992C0 46.103.9 47 1.991 47H26.01c1.1 0 2.276-.854 2.625-1.903L36 23 28.655 1.882z\"\n                fill=\"#fff\" opacity=\"0.7\" fill-rule=\"evenodd\"></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Map\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":14,"column":21,"nodeType":"41","messageId":"42","endLine":14,"endColumn":33},{"ruleId":"43","severity":1,"message":"44","line":39,"column":6,"nodeType":"45","endLine":39,"endColumn":8,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":52,"column":6,"nodeType":"45","endLine":52,"endColumn":17,"suggestions":"48"},{"ruleId":"39","severity":1,"message":"49","line":10,"column":10,"nodeType":"41","messageId":"42","endLine":10,"endColumn":15},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setTimestamp' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'now', 'timestamps', 'twentyfour', and 'weekdays'. Either include them or remove the dependency array. You can also do a functional update 'setTimestamps(t => ...)' if you only need 'timestamps' in the 'setTimestamps' call.","ArrayExpression",["52"],"React Hook useEffect has a missing dependency: 'slicks'. Either include it or remove the dependency array.",["53"],"'level' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [now, timestamps, twentyfour, weekdays]",{"range":"58","text":"59"},"Update the dependencies array to be: [slicks, timestamp]",{"range":"60","text":"61"},[1139,1141],"[now, timestamps, twentyfour, weekdays]",[1394,1405],"[slicks, timestamp]"]